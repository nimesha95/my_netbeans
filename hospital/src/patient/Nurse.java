/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient;

import java.awt.CardLayout;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nimesha
 */
public class Nurse extends javax.swing.JFrame {

    /**
     * Creates new form Nurse
     */
    private int pID=0;
    private int constID=0;
    private int wardid=0;
    private String Admit_time="";   //declared these as global to get access to diffrent methods 
    
    public Nurse() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainp = new javax.swing.JPanel();
        landing = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        disBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        admit = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        stat = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        DocN = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        wid = new javax.swing.JLabel();
        wardN = new javax.swing.JLabel();
        AdmitBtn = new javax.swing.JButton();
        discharge = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        disc_pid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notes = new javax.swing.JTextArea();
        DischargeBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        dc_admit = new javax.swing.JLabel();
        dc_docn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainp.setPreferredSize(new java.awt.Dimension(439, 441));
        mainp.setLayout(new java.awt.CardLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Admit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        disBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        disBtn.setText("Discharge");
        disBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(disBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(28, 28, 28)
                .addComponent(disBtn)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton2.setText("SignOut");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout landingLayout = new javax.swing.GroupLayout(landing);
        landing.setLayout(landingLayout);
        landingLayout.setHorizontalGroup(
            landingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, landingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(landingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(landingLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        landingLayout.setVerticalGroup(
            landingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(landingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(75, 75, 75)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        mainp.add(landing, "landing");

        jLabel1.setText("Paitent ID:");

        pid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidActionPerformed(evt);
            }
        });
        pid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pidKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pidKeyTyped(evt);
            }
        });

        jLabel2.setText("Status:");

        jLabel4.setText("Consultant:");

        jLabel5.setText("Ward ID :");

        jLabel6.setText("Ward:");

        AdmitBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AdmitBtn.setText("Admit");
        AdmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdmitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout admitLayout = new javax.swing.GroupLayout(admit);
        admit.setLayout(admitLayout);
        admitLayout.setHorizontalGroup(
            admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(admitLayout.createSequentialGroup()
                .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(admitLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(76, 76, 76)
                        .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pid, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(stat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DocN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(wid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(wardN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(admitLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(AdmitBtn)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        admitLayout.setVerticalGroup(
            admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(admitLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(stat, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DocN, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(wid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(admitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(wardN, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(AdmitBtn)
                .addContainerGap(232, Short.MAX_VALUE))
        );

        mainp.add(admit, "admit");

        jLabel7.setText("Patient ID:");

        disc_pid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disc_pidActionPerformed(evt);
            }
        });
        disc_pid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                disc_pidKeyReleased(evt);
            }
        });

        jLabel9.setText("Admission Date:");

        jLabel10.setText("Consultant Name:");

        jLabel11.setText("Notes:");

        notes.setColumns(20);
        notes.setRows(5);
        jScrollPane1.setViewportView(notes);

        DischargeBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DischargeBtn.setText("Discharge");
        DischargeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DischargeBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dischargeLayout = new javax.swing.GroupLayout(discharge);
        discharge.setLayout(dischargeLayout);
        dischargeLayout.setHorizontalGroup(
            dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dischargeLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addGap(31, 31, 31)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(disc_pid, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addComponent(dc_docn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dc_admit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dischargeLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(backBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DischargeBtn)
                .addGap(69, 69, 69))
        );
        dischargeLayout.setVerticalGroup(
            dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dischargeLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(disc_pid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dc_admit, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dc_docn, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(dischargeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DischargeBtn)
                    .addComponent(backBtn))
                .addGap(94, 94, 94))
        );

        mainp.add(discharge, "discharge");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdmitBtn.setVisible(false);
        CardLayout card = (CardLayout)mainp.getLayout();
        card.show(mainp, "admit");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void pidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidKeyTyped
        /*
        Information automatically fills out when a user eneter patient ID 
        into the textfield
        */
        String str ="";
        String dname="Dr ";
        try{
            pID =Integer.parseInt(pid.getText());
        }
        catch(Exception e){
            
        }
        try {
            String sql = "SELECT status,wid,const_id FROM admission WHERE PID="+pID; 
            ResultSet rs = DBcon.get(sql);
            while(rs.next()){
                str = rs.getString("status");
                constID=rs.getInt("const_id");
                wardid=rs.getInt("wid");
            }
            
            String sql1 = "SELECT fname,lname FROM employee WHERE ID="+constID;
            ResultSet rs1 = DBcon.get(sql1);
            while(rs1.next()){
                dname = dname+rs1.getString("fname")+" "+rs1.getString("lname");
            }
            rs.close();
            
        }
        catch (SQLException | ClassNotFoundException ex) {  
            Logger.getLogger(DBcon.class.getName()).log(Level.SEVERE, null, ex);   
            } catch (Exception ex) {
            Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("constid:::"+constID);
        stat.setText(str);
        DocN.setText(dname);
        wid.setText(Integer.toString(wardid));
        wardN.setText(returnWardName(wardid));
        AdmitBtn.setVisible(true);
    }//GEN-LAST:event_pidKeyTyped

    public static String returnWardName(int num){
        /*
        This function is used to return the name of the ward when given a ward ID
        */
         switch (num) {
             case 1:
                 return "General";
             case 2:
                 return "Pediatrics";
             case 3:
                 return "Maternity";
             case 4:
                 return "Child";
             case 5:
                 return "Psychiatric";
             default:
                 break;
         }
         return "";
    } 
    
    private void pidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pidActionPerformed

    private void AdmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdmitBtnActionPerformed
        try {
            //change values of the admission database after admitting the patient
            String sql = "UPDATE admission SET time=now(), status='Admitted' WHERE pid="+Integer.parseInt(pid.getText());   
            DBcon.post(sql);
            
            sql = "UPDATE WARD SET CURPCOUNT= CURPCOUNT+1 WHERE WID="+Integer.parseInt(wid.getText());  //this increments the total count from ward
            DBcon.post(sql);
            
            sql = "UPDATE DOCTOR SET CURPATIENTCOUNT = CURPATIENTCOUNT +1 WHERE EMPID="+constID;  //this increments the total count of assigned patients to relevent doctor
            DBcon.post(sql);
            
            JOptionPane.showOptionDialog(null, "Patient Admitted", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            AdmitBtn.setVisible(false);
            CardLayout card = (CardLayout)mainp.getLayout();
            card.show(mainp, "landing");
            
        } catch (Exception ex) {
            Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"Patient Not Found","Error",JOptionPane.ERROR_MESSAGE);
        }   
    }//GEN-LAST:event_AdmitBtnActionPerformed

    private void disBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disBtnActionPerformed
        CardLayout card = (CardLayout)mainp.getLayout();
        card.show(mainp, "discharge");
    }//GEN-LAST:event_disBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout)mainp.getLayout();
        card.show(mainp, "landing");
    }//GEN-LAST:event_backBtnActionPerformed

    private void disc_pidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_disc_pidKeyReleased
        /*
        This event happens when user enters a patient id to the discharge text field
        This will display status of the patient 
        */
        String str ="";
        String dname="Dr ";
        dc_admit.setText(str);
        dc_docn.setText(dname);
        try{
        pID =Integer.parseInt(disc_pid.getText());
        }
        catch(Exception e){
        }
        try {
            String sql = "SELECT wid,const_id,time FROM admission WHERE PID="+pID; 
            ResultSet rs = DBcon.get(sql);
            while(rs.next()){
                wardid=rs.getInt("wid");
                constID=rs.getInt("const_id");
                Admit_time= rs.getString("time");
            }
            
            String sql1 = "SELECT fname,lname FROM employee WHERE ID="+constID;
                ResultSet rs1 = DBcon.get(sql1);
                while(rs1.next()){
                    dname = dname+rs1.getString("fname")+" "+rs1.getString("lname");
                }
                rs1.close();
                
            
        }
        catch (SQLException | ClassNotFoundException ex) {  
            Logger.getLogger(DBcon.class.getName()).log(Level.SEVERE, null, ex);   
            } catch (Exception ex) {
            Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        dc_admit.setText(Admit_time.substring(0,16));
        dc_docn.setText(dname);
        
    }//GEN-LAST:event_disc_pidKeyReleased

    private void pidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pidKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_pidKeyReleased

    private void DischargeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DischargeBtnActionPerformed
        boolean bln=false;
        try {
            String sql = "SELECT EXISTS(SELECT * FROM ADMISSION WHERE pid="+Integer.parseInt(disc_pid.getText())+")";   //this returns boolean value if the record exists
            ResultSet rs = DBcon.get(sql);
            while(rs.next()){
                bln=rs.getBoolean(1);       // 1 is the column index 
            }
            rs.close();   
        }
        catch (SQLException | ClassNotFoundException ex) {  
            Logger.getLogger(DBcon.class.getName()).log(Level.SEVERE, null, ex);   
            } catch (Exception ex) {
            Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(bln){
            String Notes=notes.getText();
            String sql= "INSERT into phistory (pid,ADMIT_DATE,DISCHARGE_DATE,CONST_ID,NOTES,WID) values ("+pID+",'"+Admit_time+"',now(),"   //add patient to the phistory
                    +constID+",'"+Notes+"',"+wardid+")";
            try {
                DBcon.post(sql);
            } catch (Exception ex) {
                Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
            }

            String sql1="DELETE FROM  ADMISSION WHERE pid="+pID; //remove record from current addmissions database
            try {    
                DBcon.post(sql1);
                JOptionPane.showOptionDialog(null, "Patient Dishcharged", "", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,"Invalid values","Error",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                sql = "UPDATE WARD SET CURPCOUNT= CURPCOUNT-1 WHERE WID="+wardid;   //this decrments the total count from ward
                DBcon.post(sql);
                sql = "UPDATE DOCTOR SET CURPATIENTCOUNT = CURPATIENTCOUNT -1 WHERE EMPID="+constID;  //this increments the total count of assigned patients to relevent doctor
                DBcon.post(sql);
            } catch (Exception ex) {
                Logger.getLogger(Nurse.class.getName()).log(Level.SEVERE, null, ex);
            }

            pID=0;
            constID=0;
            wardid=0;
            Admit_time="";  
            CardLayout card = (CardLayout)mainp.getLayout();
            card.show(mainp, "landing");

        }
        else{
            JOptionPane.showMessageDialog(null,"Patient isn't admitted into ward","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        
        
        
        
    }//GEN-LAST:event_DischargeBtnActionPerformed

    private void disc_pidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disc_pidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_disc_pidActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        LogIN lgn = new LogIN();
        setVisible(false);
        lgn.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nurse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nurse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nurse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nurse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nurse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdmitBtn;
    private javax.swing.JButton DischargeBtn;
    private javax.swing.JLabel DocN;
    private javax.swing.JPanel admit;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel dc_admit;
    private javax.swing.JLabel dc_docn;
    private javax.swing.JButton disBtn;
    private javax.swing.JTextField disc_pid;
    private javax.swing.JPanel discharge;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel landing;
    private javax.swing.JPanel mainp;
    private javax.swing.JTextArea notes;
    private javax.swing.JTextField pid;
    private javax.swing.JLabel stat;
    private javax.swing.JLabel wardN;
    private javax.swing.JLabel wid;
    // End of variables declaration//GEN-END:variables
}
